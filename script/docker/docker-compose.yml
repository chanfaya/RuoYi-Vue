# 定义服务
services:
  # 为project定义服务
  redis:
    # 服务的镜像名称或镜像ID。如果镜像在本地不存在，Compose将会尝试拉取镜像
    image: redis:7.2.4-alpine
    # 配置端口 - "宿主机端口:容器暴露端口"
    ports:
      - "6379:6379"
    # 容器暴漏的端口，不映射到宿主机上,只允许能被连接的服务访问。
    #    expose:
    #      - 80
    # 环境变量配置
    environment:
      - TZ=Asia/Shanghai # 时区配置亚洲上海，解决了容器的时区问题！！！
    # 挂载
    volumes:
      - "/root/docker/redis/redis.conf:/etc/redis/redis.conf"
      - "/root/docker/redis/data:/data"
    # 容器总是重新启动
    restart: always
    # 相当于执行一些命令
    command:
      redis-server /etc/redis/redis.conf --appendonly yes
    # 指定一个自定义容器名称，而不是生成的默认名称。
    container_name: redis
    # 依赖的容器
  #    depends_on:
  #      - mysql
  mysql:
    image:  mysql:8.4.0
    container_name: mysql
    ports:
      - "3306:3306"
    # 添加环境变量
    environment:
      TZ: Asia/Shanghai # 时区配置亚洲上海，解决了容器的时区问题！！！
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - "/root/docker/mysql/data:/var/lib/mysql/"
      - "/root/docker/mysql/my.cnf:/etc/my.cnf"
      - "/root/docker/mysql/logs:/logs"
    restart: always
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 5s
      timeout: 10s
      retries: 10
  rabbitmq:
    image: rabbitmq:3.13.2-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      TZ: Asia/Shanghai # 时区配置亚洲上海，解决了容器的时区问题！！！
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    volumes:
      - "/root/docker/rabbitmq/data:/var/lib/rabbitmq"
      - "/root/docker/rabbitmq/logs:/var/log/rabbitmq"
    restart: always
